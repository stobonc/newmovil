{"version":3,"sources":["webpack:///./src/app/global/pages/registrousuario/registrousuario.module.ts","webpack:///./src/app/global/pages/registrousuario/registrousuario.page.html","webpack:///./src/app/global/pages/registrousuario/registrousuario.page.scss","webpack:///./src/app/global/pages/registrousuario/registrousuario.page.ts"],"names":[],"mappings":"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","file":"global-pages-registrousuario-registrousuario-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegistrousuarioPage } from './registrousuario.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegistrousuarioPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegistrousuarioPage]\n})\nexport class RegistrousuarioPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n       Registro usuarios\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  \\n      <ion-content padding=\\\"true\\\" justify-content-center>\\n        <form [formGroup]=\\\"formgroup\\\" (ngSubmit)=\\\"onSubmit(formgroup.value)\\\">\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Email</ion-label>\\n            <ion-input formControlName=\\\"email\\\"></ion-input>\\n          </ion-item>\\n      \\n              <div *ngIf=\\\"submitted && frm.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                <ion-item *ngIf=\\\"frm.email.errors.required\\\">\\n                    <p style=\\\"color:red\\\">El correo es requerido!</p>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"frm.email.errors.email\\\">\\n                    <p style=\\\"color:red\\\">El correo electr√≥nico no es valido!</p>\\n                </ion-item>\\n              </div>\\t\\t\\n      \\n              <ion-item>\\n                  <ion-label position=\\\"floating\\\">Nombre</ion-label>\\n                  <ion-input formControlName=\\\"nombre\\\"></ion-input>\\n                </ion-item>\\n            \\n                    <div *ngIf=\\\"submitted && frm.nombre.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <ion-item *ngIf=\\\"frm.nombre.errors.required\\\">\\n                          <p style=\\\"color:red\\\">El nombre es requerido!</p>\\n                      </ion-item>\\n                      <ion-item *ngIf=\\\"frm.nombre.errors.minlength\\\">\\n                          <p style=\\\"color:red\\\">El Nombre tiene menos de 6 caracteres!</p>\\n                      </ion-item>\\n                    </div>\\n\\n                    <ion-item>\\n                      <ion-label position=\\\"floating\\\">Cedula</ion-label>\\n                      <ion-input type=\\\"number\\\"formControlName=\\\"cedula\\\"></ion-input>\\n                   </ion-item> \\n                   <div *ngIf=\\\"submitted && frm.cedula.errors\\\" class=\\\"invalid-feedback\\\">\\n                      <ion-item *ngIf=\\\"frm.cedula.errors.required\\\">\\n                          <p style=\\\"color:red\\\">La cedula es requerida!</p>\\n                      </ion-item>\\n                      <ion-item *ngIf=\\\"frm.cedula.errors.minlength\\\">\\n                          <p style=\\\"color:red\\\">la cedula tiene menos de 5 caracteres!</p>\\n                      </ion-item>\\n                    </div>\\n\\n              <ion-item>\\n                  <ion-label position=\\\"floating\\\">Telefono</ion-label>\\n                  <ion-input type=\\\"number\\\"formControlName=\\\"telefono\\\"></ion-input>\\n               </ion-item> \\n               <div *ngIf=\\\"submitted && frm.telefono.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <ion-item *ngIf=\\\"frm.telefono.errors.required\\\">\\n                      <p style=\\\"color:red\\\">El Telefono es requerido!</p>\\n                  </ion-item>\\n                  <ion-item *ngIf=\\\"frm.telefono.errors.minlength\\\">\\n                      <p style=\\\"color:red\\\">El Telefono tiene menos de 6 caracteres!</p>\\n                  </ion-item>\\n                </div>\\n\\n                <ion-item>\\n                <ion-label position=\\\"floating\\\">Ciudad</ion-label>\\n                  <ion-input type=\\\"text\\\"formControlName=\\\"ciudad\\\"></ion-input>\\n               </ion-item> \\n               <div *ngIf=\\\"submitted && frm.ciudad.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <ion-item *ngIf=\\\"frm.ciudad.errors.required\\\">\\n                      <p style=\\\"color:red\\\">La ciudad es requerida!</p>\\n                  </ion-item>\\n                 \\n                </div>\\n          <ion-item>\\n            <ion-label position=\\\"floating\\\">Clave</ion-label>\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\"></ion-input>\\n          </ion-item>\\n      \\n              <div *ngIf=\\\"submitted && frm.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                <ion-item *ngIf=\\\"frm.password.errors.required\\\">\\n                    <p style=\\\"color:red\\\">La clave es requerida</p>\\n                </ion-item>\\n                <ion-item *ngIf=\\\"frm.password.errors.minlength\\\">\\n                    <p style=\\\"color:red\\\">La clave debe contener 6 caracteres minimo!</p>\\n                </ion-item>\\n              </div>\\n      \\n          <ion-grid>\\n            <ion-row>\\n              <ion-col>\\n                <ion-button size=\\\"large\\\" type=\\\"submit\\\"  expand=\\\"block\\\" [disabled]=\\\"!formgroup.valid\\\">Ingresar Registro</ion-button>   \\n              </ion-col>\\n              <ion-col>\\n             <ion-button class=\\\"signup-btn\\\" fill=\\\"clear\\\" [routerLink]=\\\"['/login']\\\">\\n              Ingresar Login</ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </form>\\n      </ion-content>\\n\\n</ion-content>\\n\"","module.exports = \".avatar {\\n  margin: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ2xvYmFsL3BhZ2VzL3JlZ2lzdHJvdXN1YXJpby9EOlxcUHJveWVjdG9zLUlvbmljXFxBcHBFbnRyZWdhcy9zcmNcXGFwcFxcZ2xvYmFsXFxwYWdlc1xccmVnaXN0cm91c3VhcmlvXFxyZWdpc3Ryb3VzdWFyaW8ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZ2xvYmFsL3BhZ2VzL3JlZ2lzdHJvdXN1YXJpby9yZWdpc3Ryb3VzdWFyaW8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF2YXRhcntcclxuICAgIG1hcmdpbjogYXV0bztcclxuIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AlertController, NavController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-registrousuario',\n  templateUrl: './registrousuario.page.html',\n  styleUrls: ['./registrousuario.page.scss'],\n})\nexport class RegistrousuarioPage implements OnInit {\n  submitted=false; \n  formgroup:FormGroup;\n  registroData:any={};\n  \n  constructor( public formBuilder:FormBuilder, private router:Router,public httpClient: HttpClient,\n    private alertController:AlertController) {\n   \n   }\n  \n\n  ngOnInit() {\n      this.formgroup = this.formBuilder.group({\n      email: ['', [Validators.required,Validators.email]],\n      nombre:['',[Validators.required,Validators.minLength(6)]],\n      telefono:['',[Validators.required,Validators.minLength(7)]],\n      cedula:['',[Validators.required,Validators.minLength(5)]],\n      ciudad:['',[Validators.required]],\n      password: ['', [Validators.required,Validators.minLength(6),Validators.pattern('^(?=.*[a-zA-Z])(?=.*[0-9])[a-zA-Z0-9]+$')]]\n  }, {});\n  }\n  async onSubmit(value: any): Promise<void> {\n    \n            this.submitted = true;\n\n            // Stop if the form validation has failed\n            if (this.formgroup.invalid) {\n                return;\n            }\n                    \n              //      if(this.registroData.correo !=\"\" && this.registroData.nombre !=\"\"\n              //      && this.registroData.telefono !=\"\" && this.registroData.ciudad !=\"\" && this.registroData.password !=\"\" ){\n\n            let url:string=\"https://atrisoluciones.com.co/api/usuarios\";\n\n            //let url:string=\"http://127.0.0.1:8000/user\";\n\n            var headers = new HttpHeaders();\n            headers.append(\"Accept\", 'application/json');\n            headers.append('Content-Type', 'application/json');\n            headers.append('Access-Control-Allow-Origin', '*');\n            headers.append('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');\n            headers.append('Access-Control-Allow-Headers', 'x-id');\n\n\n\n            let dataPost={\n              'user':this.formgroup.get('email').value,\n              'email':this.formgroup.get('email').value,\n              'name':this.formgroup.get('nombre').value,\n              'telefono':this.formgroup.get('telefono').value,\n              'cedula':this.formgroup.get('cedula').value,\n              'ciudad':this.formgroup.get('ciudad').value,\n              'password':this.formgroup.get('password').value\n\n            };\n            let data:Observable<any>= this.httpClient.post(url,dataPost, {headers:headers,responseType: 'text'})\n            data.subscribe(async data => {\n            \n              console.log(data);\n              const info=JSON.parse(data);\n              console.log(info['code']);\n\n              console.log(info['estado']);\n                if(info['estado']=='1'){\n     \n                  const alert = await this.alertController.create({\n                    header:'Registo de Usuario',\n                    message:\"Usuario creado correctamente\",\n                    buttons:['Ok']  \n                  })\n                    await alert.present();\n                    this.submitted = false;\n                    this.formgroup.reset();\n                    this.router.navigateByUrl('/login');\n  \n                 }else{\n                    const alert = await this.alertController.create({\n                      header:'Registro usuario',\n                      message:'El registro no se realizo, intenta nuevamente',\n                      buttons:['Ok']  \n                   })\n  \n                      await alert.present();\n\n                  }\n              \n            });\n       \n        }\n\n        \n          get frm() { return this.formgroup.controls; }  \n}\n\n\n"],"sourceRoot":""}