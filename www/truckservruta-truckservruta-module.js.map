{"version":3,"sources":["webpack:///./src/app/global/pages/truckservruta/truckservruta.module.ts","webpack:///./src/app/global/pages/truckservruta/truckservruta.page.html","webpack:///./src/app/global/pages/truckservruta/truckservruta.page.scss","webpack:///./src/app/global/pages/truckservruta/truckservruta.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEY;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAWF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBpC,kbAAkb,6GAA6G,KAAK,qMAAqM,iBAAiB,4MAA4M,kBAAkB,ud;;;;;;;;;;;ACAx9B,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AAC2C;AAElC;AAO3D;IAIE,2BAAmB,UAAqB,EAAS,MAAa;QAA3C,eAAU,GAAV,UAAU,CAAW;QAAS,WAAM,GAAN,MAAM,CAAO;QAHhE,kBAAa,GAAO,EAAE,CAAC;IAG6C,CAAC;IAGnE,oCAAQ,GAAR;QAEE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAElB,CAAC;IACM,oCAAQ,GAAd;;;;;gBAEK,GAAG,GAAQ,sDAAsD,CAAC;gBAG7D,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,SAAS,EAAC,GAAG,CAAC,CAAC;gBAE/C,IAAI,GAAkB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAC,EAAC,MAAM,UAAC,CAAC;gBAC3D,IAAI,CAAC,SAAS,CAAC,UAAM,IAAI;;wBACxB,IAAI,CAAC,aAAa,GAAC,CAAC,IAAI,CAAC,CAAC;wBAE3B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;;;qBAE/B,EAAC,UAAC,GAAsB;oBACvB,IAAI,GAAG,CAAC,KAAK,YAAY,KAAK,EAAE;wBAC/B,2BAA2B;wBAC1B,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;qBACtD;yBAAM;wBACN,iEAAiE;wBAChE,OAAO,CAAC,GAAG,CAAC,2BAAyB,GAAG,CAAC,MAAM,oBAAe,GAAG,CAAC,KAAO,CAAC,CAAC;qBAC5E;gBACH,CAAC,CAAC,CAAC;gBACN,gFAAgF;gBAEjF,IAAI,CAAC,WAAW,CAAC;;;;KACjB;IAIG,wCAAY,GAAlB,UAAmB,KAAK;;;;gBAExB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBAEb,MAAM,GAAkB;oBAC5B,WAAW,EAAC;wBACV,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;qBAC5B;iBAEF,CAAC;gBAGF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EAAC,MAAM,CAAC,CAAC;gBAChD,IAAI,CAAC,WAAW,EAAE,CAAC;;;;KAElB;IAEK,uCAAW,GAAjB;;;;;;KAGC;IA7DY,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,8HAAwC;;SAEzC,CAAC;yCAK8B,+DAAU,EAAgB,sDAAM;OAJnD,iBAAiB,CA+D7B;IAAD,wBAAC;CAAA;AA/D6B","file":"truckservruta-truckservruta-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TruckservrutaPage } from './truckservruta.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TruckservrutaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TruckservrutaPage]\n})\nexport class TruckservrutaPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button  defaultHref=\\\"/inicio\\\" (click)=\\\"ngOnDestroy\\\"></ion-back-button><font size=\\\"1px\\\">Atras</font>\\n    </ion-buttons>\\n    <ion-title><font size=\\\"4px\\\">Solicitudes en ruta</font></ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  \\n    <ion-list> \\n     <div *ngFor=\\\"let data of dataServicios;  let i =index\\\">        \\n      <div *ngIf=\\\"data.estatus==1\\\">\\n        <ion-card>\\n          <ion-badge>{{i+1}}</ion-badge>\\n          <ion-item>\\n              <ion-label class=\\\"ion-text-wrap\\\">    \\n                <p><strong><font size=\\\"2px\\\" color=\\\"Black\\\">Origen:</font></strong><font size=\\\"2px\\\">{{data.origenServ}}</font></p>\\n                <hr align=\\\"center\\\" color=\\\"primary\\\" size=\\\"3\\\" width=\\\"80%\\\" />\\n                <p><strong><font size=\\\"2px\\\" color=\\\"Black\\\">Destino:</font></strong><font size=\\\"2px\\\">{{data.destinoServ}}</font></p>     \\n              </ion-label> \\n              <ion-chip>\\n                <ion-avatar>\\n                  <img src=\\\"https://img.atrisoluciones.com.co/img/CellPoint.jpg\\\">\\n                </ion-avatar>\\n                <ion-label color=\\\"primary\\\" (click)=\\\"entregarRuta(data)\\\"><font size=\\\"px\\\">Entregar</font></ion-label>\\n              </ion-chip>\\n        </ion-item>\\n      </ion-card> \\n      </div>\\n     </div>\\n    </ion-list>\\n  </ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dsb2JhbC9wYWdlcy90cnVja3NlcnZydXRhL3RydWNrc2VydnJ1dGEucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpHeaders ,HttpClient, HttpErrorResponse, HttpParams} from '@angular/common/http';\nimport { Observable, observable } from 'rxjs';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-truckservruta',\n  templateUrl: './truckservruta.page.html',\n  styleUrls: ['./truckservruta.page.scss'],\n})\nexport class TruckservrutaPage implements OnInit {\ndataServicios:any[]=[];\ncont:any;\n\n  constructor(public HttpClient:HttpClient,private router:Router) { }\n\n \n  ngOnInit(){\n\n    this.onSubmit();\n\n  }\n   async onSubmit(){\n   \n    let url:string=\"https://atrisoluciones.com.co/api/truckservices/show\";\n\n\n       const params = new HttpParams().set('estatus','1');\n      \n       let data:Observable<any>= this.HttpClient.get(url,{params})\n       data.subscribe(async data=>{\n        this.dataServicios=(data);\n  \n       console.log(this.dataServicios);\n\n       },(err: HttpErrorResponse) => {\n         if (err.error instanceof Error) {\n          //we never seem to get here\n           console.log('An error occurred:', err.error.message);\n         } else {\n          //no network connection, HTTP404, HTTP500, HTTP200 & invalid JSON\n           console.log(`Backend returned code ${err.status}, body was: ${err.error}`);\n         }\n       });\n    //   this.dataServicios= this.data.subscribe(data =>{this.dataServicios=data;});\n\n   this.ngOnDestroy;\n  }\n\n  \n\nasync entregarRuta(event){\n\nconsole.log(event);\n\nconst extras:NavigationExtras={\n  queryParams:{\n    data: JSON.stringify(event),\n  }\n\n};\n\n\nthis.router.navigate(['/truckentregas'],extras);\nthis.ngOnDestroy();\n\n}\n\nasync ngOnDestroy(){\n\n    \n}\n\n}\n"],"sourceRoot":""}